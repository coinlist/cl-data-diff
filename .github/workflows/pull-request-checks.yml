name: PR checks

on:
  pull_request: {}

permissions:
  id-token: write
  contents: read
  actions: write

jobs:
  cancel:
    description: Cancel any in-progress runs of this workflow execution
    runs-on: ubuntu-latest
    steps:
    - uses: styfle/cancel-workflow-action@0.12.0
      with:
        access_token: ${{ github.token }}

  setup:
    description: Setsup the necessary variables for Python and Poery Versions
    runs-on: ubuntu-latest
    needs: [cancel]
    outputs:
      python_version: ${{ steps.set_var.outputs.python_version }}
      poetry_version: ${{ steps.set_var.outputs.poetry_version }}
      role_to_assume: ${{ steps.set_var.outputs.role_to_assume }}
      aws_region: ${{ steps.set_var.outputs.aws_region }}
    steps:
      - id: set_var
        run: |
          echo "python_version=3.8" >> $GITHUB_OUTPUT
          echo "poetry_version=1.7.1" >> $GITHUB_OUTPUT
          echo "role_to_assume=arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID}}:role/github-actions-data-platform-data-diff" >> $GITHUB_OUTPUT
          echo "aws_region=${{ secrets.AWS_REGION }}" >> $GITHUB_OUTPUT

  perform-formatting:
    description: Formats the *.py files using ruff
    needs: [setup]
    uses: ./.github/workflows/formatter.yml

  cache-dependencies:
    description: Caches project dependencies for faster workflow execution
    needs: [setup, preform-formatting]
    uses: ./.github/workflows/_cache-dependencies.yml
    secrets: inherit
    with:
      python_version: ${{ needs.setup.outputs.python_version }}
      poetry_version: ${{ needs.setup.outputs.poetry_version }}

  run-unit-test-versions:
    description: Runs the unit tests for the different versions of Python
    needs: [setup]
    uses: ./.github/workflows/ci_full.yml

  run-unit-test-per-database:
    description: Runs the unit tests for the different databases
    needs: [setup]
    uses: ./.github/workflows/ci.yml

  publish-data-platform-data-diff-dev:
    needs: [setup, cache-dependencies]
    uses: ./.github/workflows/_publish-data-platform-data-diff.yml
    secrets: inherit
    with:
      python_version: ${{ needs.setup.outputs.python_version }}
      poetry_version: ${{ needs.setup.outputs.poetry_version }}
      python_cache_key: ${{ needs.cache-dependencies.outputs.python_cache_key }}
      role_to_assume: ${{ needs.setup.outputs.role_to_assume }}
      aws_region: ${{ needs.setup.outputs.aws_region }}
